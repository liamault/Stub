// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bank_to_brokerage.proto

#ifndef PROTOBUF_INCLUDED_bank_5fto_5fbrokerage_2eproto
#define PROTOBUF_INCLUDED_bank_5fto_5fbrokerage_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_bank_5fto_5fbrokerage_2eproto 

namespace protobuf_bank_5fto_5fbrokerage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_bank_5fto_5fbrokerage_2eproto
namespace brokerage {
class Deposit;
class DepositDefaultTypeInternal;
extern DepositDefaultTypeInternal _Deposit_default_instance_;
class EndOfDayResponse;
class EndOfDayResponseDefaultTypeInternal;
extern EndOfDayResponseDefaultTypeInternal _EndOfDayResponse_default_instance_;
class EndOfDaySummaryRequest;
class EndOfDaySummaryRequestDefaultTypeInternal;
extern EndOfDaySummaryRequestDefaultTypeInternal _EndOfDaySummaryRequest_default_instance_;
class EndOfDaySummaryRequest_Transaction;
class EndOfDaySummaryRequest_TransactionDefaultTypeInternal;
extern EndOfDaySummaryRequest_TransactionDefaultTypeInternal _EndOfDaySummaryRequest_Transaction_default_instance_;
class Update_BrokerageAccount_Rep;
class Update_BrokerageAccount_RepDefaultTypeInternal;
extern Update_BrokerageAccount_RepDefaultTypeInternal _Update_BrokerageAccount_Rep_default_instance_;
class Update_BrokerageAccount_Req;
class Update_BrokerageAccount_ReqDefaultTypeInternal;
extern Update_BrokerageAccount_ReqDefaultTypeInternal _Update_BrokerageAccount_Req_default_instance_;
class Withdraw;
class WithdrawDefaultTypeInternal;
extern WithdrawDefaultTypeInternal _Withdraw_default_instance_;
}  // namespace brokerage
namespace google {
namespace protobuf {
template<> ::brokerage::Deposit* Arena::CreateMaybeMessage<::brokerage::Deposit>(Arena*);
template<> ::brokerage::EndOfDayResponse* Arena::CreateMaybeMessage<::brokerage::EndOfDayResponse>(Arena*);
template<> ::brokerage::EndOfDaySummaryRequest* Arena::CreateMaybeMessage<::brokerage::EndOfDaySummaryRequest>(Arena*);
template<> ::brokerage::EndOfDaySummaryRequest_Transaction* Arena::CreateMaybeMessage<::brokerage::EndOfDaySummaryRequest_Transaction>(Arena*);
template<> ::brokerage::Update_BrokerageAccount_Rep* Arena::CreateMaybeMessage<::brokerage::Update_BrokerageAccount_Rep>(Arena*);
template<> ::brokerage::Update_BrokerageAccount_Req* Arena::CreateMaybeMessage<::brokerage::Update_BrokerageAccount_Req>(Arena*);
template<> ::brokerage::Withdraw* Arena::CreateMaybeMessage<::brokerage::Withdraw>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace brokerage {

enum EndOfDaySummaryRequest_Operation {
  EndOfDaySummaryRequest_Operation_DEPOSIT = 0,
  EndOfDaySummaryRequest_Operation_WITHDRAW = 1,
  EndOfDaySummaryRequest_Operation_EndOfDaySummaryRequest_Operation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EndOfDaySummaryRequest_Operation_EndOfDaySummaryRequest_Operation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EndOfDaySummaryRequest_Operation_IsValid(int value);
const EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest_Operation_Operation_MIN = EndOfDaySummaryRequest_Operation_DEPOSIT;
const EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest_Operation_Operation_MAX = EndOfDaySummaryRequest_Operation_WITHDRAW;
const int EndOfDaySummaryRequest_Operation_Operation_ARRAYSIZE = EndOfDaySummaryRequest_Operation_Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* EndOfDaySummaryRequest_Operation_descriptor();
inline const ::std::string& EndOfDaySummaryRequest_Operation_Name(EndOfDaySummaryRequest_Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    EndOfDaySummaryRequest_Operation_descriptor(), value);
}
inline bool EndOfDaySummaryRequest_Operation_Parse(
    const ::std::string& name, EndOfDaySummaryRequest_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EndOfDaySummaryRequest_Operation>(
    EndOfDaySummaryRequest_Operation_descriptor(), name, value);
}
enum EndOfDayResponse_Status {
  EndOfDayResponse_Status_SUCCESS = 0,
  EndOfDayResponse_Status_RETRANSMIT = 1,
  EndOfDayResponse_Status_EndOfDayResponse_Status_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EndOfDayResponse_Status_EndOfDayResponse_Status_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EndOfDayResponse_Status_IsValid(int value);
const EndOfDayResponse_Status EndOfDayResponse_Status_Status_MIN = EndOfDayResponse_Status_SUCCESS;
const EndOfDayResponse_Status EndOfDayResponse_Status_Status_MAX = EndOfDayResponse_Status_RETRANSMIT;
const int EndOfDayResponse_Status_Status_ARRAYSIZE = EndOfDayResponse_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* EndOfDayResponse_Status_descriptor();
inline const ::std::string& EndOfDayResponse_Status_Name(EndOfDayResponse_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    EndOfDayResponse_Status_descriptor(), value);
}
inline bool EndOfDayResponse_Status_Parse(
    const ::std::string& name, EndOfDayResponse_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EndOfDayResponse_Status>(
    EndOfDayResponse_Status_descriptor(), name, value);
}
enum Update_BrokerageAccount_Rep_ResponseType {
  Update_BrokerageAccount_Rep_ResponseType_INVALID = 0,
  Update_BrokerageAccount_Rep_ResponseType_MALFORMED_MESSAGE = 1,
  Update_BrokerageAccount_Rep_ResponseType_INVALID_TRANSACTION_ID = 2,
  Update_BrokerageAccount_Rep_ResponseType_INVALID_BROKERAGE_ID = 3,
  Update_BrokerageAccount_Rep_ResponseType_SUCCESS = 4,
  Update_BrokerageAccount_Rep_ResponseType_Update_BrokerageAccount_Rep_ResponseType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Update_BrokerageAccount_Rep_ResponseType_Update_BrokerageAccount_Rep_ResponseType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Update_BrokerageAccount_Rep_ResponseType_IsValid(int value);
const Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep_ResponseType_ResponseType_MIN = Update_BrokerageAccount_Rep_ResponseType_INVALID;
const Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep_ResponseType_ResponseType_MAX = Update_BrokerageAccount_Rep_ResponseType_SUCCESS;
const int Update_BrokerageAccount_Rep_ResponseType_ResponseType_ARRAYSIZE = Update_BrokerageAccount_Rep_ResponseType_ResponseType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Update_BrokerageAccount_Rep_ResponseType_descriptor();
inline const ::std::string& Update_BrokerageAccount_Rep_ResponseType_Name(Update_BrokerageAccount_Rep_ResponseType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Update_BrokerageAccount_Rep_ResponseType_descriptor(), value);
}
inline bool Update_BrokerageAccount_Rep_ResponseType_Parse(
    const ::std::string& name, Update_BrokerageAccount_Rep_ResponseType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Update_BrokerageAccount_Rep_ResponseType>(
    Update_BrokerageAccount_Rep_ResponseType_descriptor(), name, value);
}
// ===================================================================

class EndOfDaySummaryRequest_Transaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.EndOfDaySummaryRequest.Transaction) */ {
 public:
  EndOfDaySummaryRequest_Transaction();
  virtual ~EndOfDaySummaryRequest_Transaction();

  EndOfDaySummaryRequest_Transaction(const EndOfDaySummaryRequest_Transaction& from);

  inline EndOfDaySummaryRequest_Transaction& operator=(const EndOfDaySummaryRequest_Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndOfDaySummaryRequest_Transaction(EndOfDaySummaryRequest_Transaction&& from) noexcept
    : EndOfDaySummaryRequest_Transaction() {
    *this = ::std::move(from);
  }

  inline EndOfDaySummaryRequest_Transaction& operator=(EndOfDaySummaryRequest_Transaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndOfDaySummaryRequest_Transaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndOfDaySummaryRequest_Transaction* internal_default_instance() {
    return reinterpret_cast<const EndOfDaySummaryRequest_Transaction*>(
               &_EndOfDaySummaryRequest_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(EndOfDaySummaryRequest_Transaction* other);
  friend void swap(EndOfDaySummaryRequest_Transaction& a, EndOfDaySummaryRequest_Transaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndOfDaySummaryRequest_Transaction* New() const final {
    return CreateMaybeMessage<EndOfDaySummaryRequest_Transaction>(NULL);
  }

  EndOfDaySummaryRequest_Transaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndOfDaySummaryRequest_Transaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EndOfDaySummaryRequest_Transaction& from);
  void MergeFrom(const EndOfDaySummaryRequest_Transaction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndOfDaySummaryRequest_Transaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Price amount = 2;
  bool has_amount() const;
  void clear_amount();
  static const int kAmountFieldNumber = 2;
  private:
  const ::Price& _internal_amount() const;
  public:
  const ::Price& amount() const;
  ::Price* release_amount();
  ::Price* mutable_amount();
  void set_allocated_amount(::Price* amount);

  // .brokerage.EndOfDaySummaryRequest.Operation operation = 1;
  void clear_operation();
  static const int kOperationFieldNumber = 1;
  ::brokerage::EndOfDaySummaryRequest_Operation operation() const;
  void set_operation(::brokerage::EndOfDaySummaryRequest_Operation value);

  // .Magic component = 3;
  void clear_component();
  static const int kComponentFieldNumber = 3;
  ::Magic component() const;
  void set_component(::Magic value);

  // @@protoc_insertion_point(class_scope:brokerage.EndOfDaySummaryRequest.Transaction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Price* amount_;
  int operation_;
  int component_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndOfDaySummaryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.EndOfDaySummaryRequest) */ {
 public:
  EndOfDaySummaryRequest();
  virtual ~EndOfDaySummaryRequest();

  EndOfDaySummaryRequest(const EndOfDaySummaryRequest& from);

  inline EndOfDaySummaryRequest& operator=(const EndOfDaySummaryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndOfDaySummaryRequest(EndOfDaySummaryRequest&& from) noexcept
    : EndOfDaySummaryRequest() {
    *this = ::std::move(from);
  }

  inline EndOfDaySummaryRequest& operator=(EndOfDaySummaryRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndOfDaySummaryRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndOfDaySummaryRequest* internal_default_instance() {
    return reinterpret_cast<const EndOfDaySummaryRequest*>(
               &_EndOfDaySummaryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(EndOfDaySummaryRequest* other);
  friend void swap(EndOfDaySummaryRequest& a, EndOfDaySummaryRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndOfDaySummaryRequest* New() const final {
    return CreateMaybeMessage<EndOfDaySummaryRequest>(NULL);
  }

  EndOfDaySummaryRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndOfDaySummaryRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EndOfDaySummaryRequest& from);
  void MergeFrom(const EndOfDaySummaryRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndOfDaySummaryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EndOfDaySummaryRequest_Transaction Transaction;

  typedef EndOfDaySummaryRequest_Operation Operation;
  static const Operation DEPOSIT =
    EndOfDaySummaryRequest_Operation_DEPOSIT;
  static const Operation WITHDRAW =
    EndOfDaySummaryRequest_Operation_WITHDRAW;
  static inline bool Operation_IsValid(int value) {
    return EndOfDaySummaryRequest_Operation_IsValid(value);
  }
  static const Operation Operation_MIN =
    EndOfDaySummaryRequest_Operation_Operation_MIN;
  static const Operation Operation_MAX =
    EndOfDaySummaryRequest_Operation_Operation_MAX;
  static const int Operation_ARRAYSIZE =
    EndOfDaySummaryRequest_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_descriptor() {
    return EndOfDaySummaryRequest_Operation_descriptor();
  }
  static inline const ::std::string& Operation_Name(Operation value) {
    return EndOfDaySummaryRequest_Operation_Name(value);
  }
  static inline bool Operation_Parse(const ::std::string& name,
      Operation* value) {
    return EndOfDaySummaryRequest_Operation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .brokerage.EndOfDaySummaryRequest.Transaction transactions = 2;
  int transactions_size() const;
  void clear_transactions();
  static const int kTransactionsFieldNumber = 2;
  ::brokerage::EndOfDaySummaryRequest_Transaction* mutable_transactions(int index);
  ::google::protobuf::RepeatedPtrField< ::brokerage::EndOfDaySummaryRequest_Transaction >*
      mutable_transactions();
  const ::brokerage::EndOfDaySummaryRequest_Transaction& transactions(int index) const;
  ::brokerage::EndOfDaySummaryRequest_Transaction* add_transactions();
  const ::google::protobuf::RepeatedPtrField< ::brokerage::EndOfDaySummaryRequest_Transaction >&
      transactions() const;

  // .Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Header& _internal_header() const;
  public:
  const ::Header& header() const;
  ::Header* release_header();
  ::Header* mutable_header();
  void set_allocated_header(::Header* header);

  // @@protoc_insertion_point(class_scope:brokerage.EndOfDaySummaryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::brokerage::EndOfDaySummaryRequest_Transaction > transactions_;
  ::Header* header_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndOfDayResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.EndOfDayResponse) */ {
 public:
  EndOfDayResponse();
  virtual ~EndOfDayResponse();

  EndOfDayResponse(const EndOfDayResponse& from);

  inline EndOfDayResponse& operator=(const EndOfDayResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndOfDayResponse(EndOfDayResponse&& from) noexcept
    : EndOfDayResponse() {
    *this = ::std::move(from);
  }

  inline EndOfDayResponse& operator=(EndOfDayResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndOfDayResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndOfDayResponse* internal_default_instance() {
    return reinterpret_cast<const EndOfDayResponse*>(
               &_EndOfDayResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(EndOfDayResponse* other);
  friend void swap(EndOfDayResponse& a, EndOfDayResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndOfDayResponse* New() const final {
    return CreateMaybeMessage<EndOfDayResponse>(NULL);
  }

  EndOfDayResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EndOfDayResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EndOfDayResponse& from);
  void MergeFrom(const EndOfDayResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndOfDayResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef EndOfDayResponse_Status Status;
  static const Status SUCCESS =
    EndOfDayResponse_Status_SUCCESS;
  static const Status RETRANSMIT =
    EndOfDayResponse_Status_RETRANSMIT;
  static inline bool Status_IsValid(int value) {
    return EndOfDayResponse_Status_IsValid(value);
  }
  static const Status Status_MIN =
    EndOfDayResponse_Status_Status_MIN;
  static const Status Status_MAX =
    EndOfDayResponse_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    EndOfDayResponse_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return EndOfDayResponse_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return EndOfDayResponse_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return EndOfDayResponse_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Header& _internal_header() const;
  public:
  const ::Header& header() const;
  ::Header* release_header();
  ::Header* mutable_header();
  void set_allocated_header(::Header* header);

  // .brokerage.EndOfDayResponse.Status status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::brokerage::EndOfDayResponse_Status status() const;
  void set_status(::brokerage::EndOfDayResponse_Status value);

  // @@protoc_insertion_point(class_scope:brokerage.EndOfDayResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Header* header_;
  int status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Update_BrokerageAccount_Req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.Update_BrokerageAccount_Req) */ {
 public:
  Update_BrokerageAccount_Req();
  virtual ~Update_BrokerageAccount_Req();

  Update_BrokerageAccount_Req(const Update_BrokerageAccount_Req& from);

  inline Update_BrokerageAccount_Req& operator=(const Update_BrokerageAccount_Req& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Update_BrokerageAccount_Req(Update_BrokerageAccount_Req&& from) noexcept
    : Update_BrokerageAccount_Req() {
    *this = ::std::move(from);
  }

  inline Update_BrokerageAccount_Req& operator=(Update_BrokerageAccount_Req&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Update_BrokerageAccount_Req& default_instance();

  enum PayloadCase {
    kWithdraw = 2,
    kDeposit = 3,
    PAYLOAD_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Update_BrokerageAccount_Req* internal_default_instance() {
    return reinterpret_cast<const Update_BrokerageAccount_Req*>(
               &_Update_BrokerageAccount_Req_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Update_BrokerageAccount_Req* other);
  friend void swap(Update_BrokerageAccount_Req& a, Update_BrokerageAccount_Req& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Update_BrokerageAccount_Req* New() const final {
    return CreateMaybeMessage<Update_BrokerageAccount_Req>(NULL);
  }

  Update_BrokerageAccount_Req* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Update_BrokerageAccount_Req>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Update_BrokerageAccount_Req& from);
  void MergeFrom(const Update_BrokerageAccount_Req& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Update_BrokerageAccount_Req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Header& _internal_header() const;
  public:
  const ::Header& header() const;
  ::Header* release_header();
  ::Header* mutable_header();
  void set_allocated_header(::Header* header);

  // .brokerage.Withdraw withdraw = 2;
  bool has_withdraw() const;
  void clear_withdraw();
  static const int kWithdrawFieldNumber = 2;
  private:
  const ::brokerage::Withdraw& _internal_withdraw() const;
  public:
  const ::brokerage::Withdraw& withdraw() const;
  ::brokerage::Withdraw* release_withdraw();
  ::brokerage::Withdraw* mutable_withdraw();
  void set_allocated_withdraw(::brokerage::Withdraw* withdraw);

  // .brokerage.Deposit deposit = 3;
  bool has_deposit() const;
  void clear_deposit();
  static const int kDepositFieldNumber = 3;
  private:
  const ::brokerage::Deposit& _internal_deposit() const;
  public:
  const ::brokerage::Deposit& deposit() const;
  ::brokerage::Deposit* release_deposit();
  ::brokerage::Deposit* mutable_deposit();
  void set_allocated_deposit(::brokerage::Deposit* deposit);

  void clear_payload();
  PayloadCase payload_case() const;
  // @@protoc_insertion_point(class_scope:brokerage.Update_BrokerageAccount_Req)
 private:
  void set_has_withdraw();
  void set_has_deposit();

  inline bool has_payload() const;
  inline void clear_has_payload();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Header* header_;
  union PayloadUnion {
    PayloadUnion() {}
    ::brokerage::Withdraw* withdraw_;
    ::brokerage::Deposit* deposit_;
  } payload_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Update_BrokerageAccount_Rep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.Update_BrokerageAccount_Rep) */ {
 public:
  Update_BrokerageAccount_Rep();
  virtual ~Update_BrokerageAccount_Rep();

  Update_BrokerageAccount_Rep(const Update_BrokerageAccount_Rep& from);

  inline Update_BrokerageAccount_Rep& operator=(const Update_BrokerageAccount_Rep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Update_BrokerageAccount_Rep(Update_BrokerageAccount_Rep&& from) noexcept
    : Update_BrokerageAccount_Rep() {
    *this = ::std::move(from);
  }

  inline Update_BrokerageAccount_Rep& operator=(Update_BrokerageAccount_Rep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Update_BrokerageAccount_Rep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Update_BrokerageAccount_Rep* internal_default_instance() {
    return reinterpret_cast<const Update_BrokerageAccount_Rep*>(
               &_Update_BrokerageAccount_Rep_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Update_BrokerageAccount_Rep* other);
  friend void swap(Update_BrokerageAccount_Rep& a, Update_BrokerageAccount_Rep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Update_BrokerageAccount_Rep* New() const final {
    return CreateMaybeMessage<Update_BrokerageAccount_Rep>(NULL);
  }

  Update_BrokerageAccount_Rep* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Update_BrokerageAccount_Rep>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Update_BrokerageAccount_Rep& from);
  void MergeFrom(const Update_BrokerageAccount_Rep& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Update_BrokerageAccount_Rep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Update_BrokerageAccount_Rep_ResponseType ResponseType;
  static const ResponseType INVALID =
    Update_BrokerageAccount_Rep_ResponseType_INVALID;
  static const ResponseType MALFORMED_MESSAGE =
    Update_BrokerageAccount_Rep_ResponseType_MALFORMED_MESSAGE;
  static const ResponseType INVALID_TRANSACTION_ID =
    Update_BrokerageAccount_Rep_ResponseType_INVALID_TRANSACTION_ID;
  static const ResponseType INVALID_BROKERAGE_ID =
    Update_BrokerageAccount_Rep_ResponseType_INVALID_BROKERAGE_ID;
  static const ResponseType SUCCESS =
    Update_BrokerageAccount_Rep_ResponseType_SUCCESS;
  static inline bool ResponseType_IsValid(int value) {
    return Update_BrokerageAccount_Rep_ResponseType_IsValid(value);
  }
  static const ResponseType ResponseType_MIN =
    Update_BrokerageAccount_Rep_ResponseType_ResponseType_MIN;
  static const ResponseType ResponseType_MAX =
    Update_BrokerageAccount_Rep_ResponseType_ResponseType_MAX;
  static const int ResponseType_ARRAYSIZE =
    Update_BrokerageAccount_Rep_ResponseType_ResponseType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResponseType_descriptor() {
    return Update_BrokerageAccount_Rep_ResponseType_descriptor();
  }
  static inline const ::std::string& ResponseType_Name(ResponseType value) {
    return Update_BrokerageAccount_Rep_ResponseType_Name(value);
  }
  static inline bool ResponseType_Parse(const ::std::string& name,
      ResponseType* value) {
    return Update_BrokerageAccount_Rep_ResponseType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::Header& _internal_header() const;
  public:
  const ::Header& header() const;
  ::Header* release_header();
  ::Header* mutable_header();
  void set_allocated_header(::Header* header);

  // .brokerage.Update_BrokerageAccount_Rep.ResponseType response = 2;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  ::brokerage::Update_BrokerageAccount_Rep_ResponseType response() const;
  void set_response(::brokerage::Update_BrokerageAccount_Rep_ResponseType value);

  // @@protoc_insertion_point(class_scope:brokerage.Update_BrokerageAccount_Rep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::Header* header_;
  int response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Deposit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.Deposit) */ {
 public:
  Deposit();
  virtual ~Deposit();

  Deposit(const Deposit& from);

  inline Deposit& operator=(const Deposit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Deposit(Deposit&& from) noexcept
    : Deposit() {
    *this = ::std::move(from);
  }

  inline Deposit& operator=(Deposit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Deposit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Deposit* internal_default_instance() {
    return reinterpret_cast<const Deposit*>(
               &_Deposit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Deposit* other);
  friend void swap(Deposit& a, Deposit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Deposit* New() const final {
    return CreateMaybeMessage<Deposit>(NULL);
  }

  Deposit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Deposit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Deposit& from);
  void MergeFrom(const Deposit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Deposit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .BrokerageId brokerage_id = 1;
  bool has_brokerage_id() const;
  void clear_brokerage_id();
  static const int kBrokerageIdFieldNumber = 1;
  private:
  const ::BrokerageId& _internal_brokerage_id() const;
  public:
  const ::BrokerageId& brokerage_id() const;
  ::BrokerageId* release_brokerage_id();
  ::BrokerageId* mutable_brokerage_id();
  void set_allocated_brokerage_id(::BrokerageId* brokerage_id);

  // .Price price = 2;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  private:
  const ::Price& _internal_price() const;
  public:
  const ::Price& price() const;
  ::Price* release_price();
  ::Price* mutable_price();
  void set_allocated_price(::Price* price);

  // @@protoc_insertion_point(class_scope:brokerage.Deposit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::BrokerageId* brokerage_id_;
  ::Price* price_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Withdraw : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:brokerage.Withdraw) */ {
 public:
  Withdraw();
  virtual ~Withdraw();

  Withdraw(const Withdraw& from);

  inline Withdraw& operator=(const Withdraw& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Withdraw(Withdraw&& from) noexcept
    : Withdraw() {
    *this = ::std::move(from);
  }

  inline Withdraw& operator=(Withdraw&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Withdraw& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Withdraw* internal_default_instance() {
    return reinterpret_cast<const Withdraw*>(
               &_Withdraw_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Withdraw* other);
  friend void swap(Withdraw& a, Withdraw& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Withdraw* New() const final {
    return CreateMaybeMessage<Withdraw>(NULL);
  }

  Withdraw* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Withdraw>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Withdraw& from);
  void MergeFrom(const Withdraw& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Withdraw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .BrokerageId brokerage_id = 1;
  bool has_brokerage_id() const;
  void clear_brokerage_id();
  static const int kBrokerageIdFieldNumber = 1;
  private:
  const ::BrokerageId& _internal_brokerage_id() const;
  public:
  const ::BrokerageId& brokerage_id() const;
  ::BrokerageId* release_brokerage_id();
  ::BrokerageId* mutable_brokerage_id();
  void set_allocated_brokerage_id(::BrokerageId* brokerage_id);

  // .Price price = 2;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  private:
  const ::Price& _internal_price() const;
  public:
  const ::Price& price() const;
  ::Price* release_price();
  ::Price* mutable_price();
  void set_allocated_price(::Price* price);

  // @@protoc_insertion_point(class_scope:brokerage.Withdraw)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::BrokerageId* brokerage_id_;
  ::Price* price_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_bank_5fto_5fbrokerage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EndOfDaySummaryRequest_Transaction

// .brokerage.EndOfDaySummaryRequest.Operation operation = 1;
inline void EndOfDaySummaryRequest_Transaction::clear_operation() {
  operation_ = 0;
}
inline ::brokerage::EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest_Transaction::operation() const {
  // @@protoc_insertion_point(field_get:brokerage.EndOfDaySummaryRequest.Transaction.operation)
  return static_cast< ::brokerage::EndOfDaySummaryRequest_Operation >(operation_);
}
inline void EndOfDaySummaryRequest_Transaction::set_operation(::brokerage::EndOfDaySummaryRequest_Operation value) {
  
  operation_ = value;
  // @@protoc_insertion_point(field_set:brokerage.EndOfDaySummaryRequest.Transaction.operation)
}

// .Price amount = 2;
inline bool EndOfDaySummaryRequest_Transaction::has_amount() const {
  return this != internal_default_instance() && amount_ != NULL;
}
inline const ::Price& EndOfDaySummaryRequest_Transaction::_internal_amount() const {
  return *amount_;
}
inline const ::Price& EndOfDaySummaryRequest_Transaction::amount() const {
  const ::Price* p = amount_;
  // @@protoc_insertion_point(field_get:brokerage.EndOfDaySummaryRequest.Transaction.amount)
  return p != NULL ? *p : *reinterpret_cast<const ::Price*>(
      &::_Price_default_instance_);
}
inline ::Price* EndOfDaySummaryRequest_Transaction::release_amount() {
  // @@protoc_insertion_point(field_release:brokerage.EndOfDaySummaryRequest.Transaction.amount)
  
  ::Price* temp = amount_;
  amount_ = NULL;
  return temp;
}
inline ::Price* EndOfDaySummaryRequest_Transaction::mutable_amount() {
  
  if (amount_ == NULL) {
    auto* p = CreateMaybeMessage<::Price>(GetArenaNoVirtual());
    amount_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.EndOfDaySummaryRequest.Transaction.amount)
  return amount_;
}
inline void EndOfDaySummaryRequest_Transaction::set_allocated_amount(::Price* amount) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(amount_);
  }
  if (amount) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      amount = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, amount, submessage_arena);
    }
    
  } else {
    
  }
  amount_ = amount;
  // @@protoc_insertion_point(field_set_allocated:brokerage.EndOfDaySummaryRequest.Transaction.amount)
}

// .Magic component = 3;
inline void EndOfDaySummaryRequest_Transaction::clear_component() {
  component_ = 0;
}
inline ::Magic EndOfDaySummaryRequest_Transaction::component() const {
  // @@protoc_insertion_point(field_get:brokerage.EndOfDaySummaryRequest.Transaction.component)
  return static_cast< ::Magic >(component_);
}
inline void EndOfDaySummaryRequest_Transaction::set_component(::Magic value) {
  
  component_ = value;
  // @@protoc_insertion_point(field_set:brokerage.EndOfDaySummaryRequest.Transaction.component)
}

// -------------------------------------------------------------------

// EndOfDaySummaryRequest

// .Header header = 1;
inline bool EndOfDaySummaryRequest::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Header& EndOfDaySummaryRequest::_internal_header() const {
  return *header_;
}
inline const ::Header& EndOfDaySummaryRequest::header() const {
  const ::Header* p = header_;
  // @@protoc_insertion_point(field_get:brokerage.EndOfDaySummaryRequest.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Header*>(
      &::_Header_default_instance_);
}
inline ::Header* EndOfDaySummaryRequest::release_header() {
  // @@protoc_insertion_point(field_release:brokerage.EndOfDaySummaryRequest.header)
  
  ::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Header* EndOfDaySummaryRequest::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.EndOfDaySummaryRequest.header)
  return header_;
}
inline void EndOfDaySummaryRequest::set_allocated_header(::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:brokerage.EndOfDaySummaryRequest.header)
}

// repeated .brokerage.EndOfDaySummaryRequest.Transaction transactions = 2;
inline int EndOfDaySummaryRequest::transactions_size() const {
  return transactions_.size();
}
inline void EndOfDaySummaryRequest::clear_transactions() {
  transactions_.Clear();
}
inline ::brokerage::EndOfDaySummaryRequest_Transaction* EndOfDaySummaryRequest::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:brokerage.EndOfDaySummaryRequest.transactions)
  return transactions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::brokerage::EndOfDaySummaryRequest_Transaction >*
EndOfDaySummaryRequest::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:brokerage.EndOfDaySummaryRequest.transactions)
  return &transactions_;
}
inline const ::brokerage::EndOfDaySummaryRequest_Transaction& EndOfDaySummaryRequest::transactions(int index) const {
  // @@protoc_insertion_point(field_get:brokerage.EndOfDaySummaryRequest.transactions)
  return transactions_.Get(index);
}
inline ::brokerage::EndOfDaySummaryRequest_Transaction* EndOfDaySummaryRequest::add_transactions() {
  // @@protoc_insertion_point(field_add:brokerage.EndOfDaySummaryRequest.transactions)
  return transactions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::brokerage::EndOfDaySummaryRequest_Transaction >&
EndOfDaySummaryRequest::transactions() const {
  // @@protoc_insertion_point(field_list:brokerage.EndOfDaySummaryRequest.transactions)
  return transactions_;
}

// -------------------------------------------------------------------

// EndOfDayResponse

// .Header header = 1;
inline bool EndOfDayResponse::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Header& EndOfDayResponse::_internal_header() const {
  return *header_;
}
inline const ::Header& EndOfDayResponse::header() const {
  const ::Header* p = header_;
  // @@protoc_insertion_point(field_get:brokerage.EndOfDayResponse.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Header*>(
      &::_Header_default_instance_);
}
inline ::Header* EndOfDayResponse::release_header() {
  // @@protoc_insertion_point(field_release:brokerage.EndOfDayResponse.header)
  
  ::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Header* EndOfDayResponse::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.EndOfDayResponse.header)
  return header_;
}
inline void EndOfDayResponse::set_allocated_header(::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:brokerage.EndOfDayResponse.header)
}

// .brokerage.EndOfDayResponse.Status status = 2;
inline void EndOfDayResponse::clear_status() {
  status_ = 0;
}
inline ::brokerage::EndOfDayResponse_Status EndOfDayResponse::status() const {
  // @@protoc_insertion_point(field_get:brokerage.EndOfDayResponse.status)
  return static_cast< ::brokerage::EndOfDayResponse_Status >(status_);
}
inline void EndOfDayResponse::set_status(::brokerage::EndOfDayResponse_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:brokerage.EndOfDayResponse.status)
}

// -------------------------------------------------------------------

// Update_BrokerageAccount_Req

// .Header header = 1;
inline bool Update_BrokerageAccount_Req::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Header& Update_BrokerageAccount_Req::_internal_header() const {
  return *header_;
}
inline const ::Header& Update_BrokerageAccount_Req::header() const {
  const ::Header* p = header_;
  // @@protoc_insertion_point(field_get:brokerage.Update_BrokerageAccount_Req.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Header*>(
      &::_Header_default_instance_);
}
inline ::Header* Update_BrokerageAccount_Req::release_header() {
  // @@protoc_insertion_point(field_release:brokerage.Update_BrokerageAccount_Req.header)
  
  ::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Header* Update_BrokerageAccount_Req::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Update_BrokerageAccount_Req.header)
  return header_;
}
inline void Update_BrokerageAccount_Req::set_allocated_header(::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:brokerage.Update_BrokerageAccount_Req.header)
}

// .brokerage.Withdraw withdraw = 2;
inline bool Update_BrokerageAccount_Req::has_withdraw() const {
  return payload_case() == kWithdraw;
}
inline void Update_BrokerageAccount_Req::set_has_withdraw() {
  _oneof_case_[0] = kWithdraw;
}
inline void Update_BrokerageAccount_Req::clear_withdraw() {
  if (has_withdraw()) {
    delete payload_.withdraw_;
    clear_has_payload();
  }
}
inline const ::brokerage::Withdraw& Update_BrokerageAccount_Req::_internal_withdraw() const {
  return *payload_.withdraw_;
}
inline ::brokerage::Withdraw* Update_BrokerageAccount_Req::release_withdraw() {
  // @@protoc_insertion_point(field_release:brokerage.Update_BrokerageAccount_Req.withdraw)
  if (has_withdraw()) {
    clear_has_payload();
      ::brokerage::Withdraw* temp = payload_.withdraw_;
    payload_.withdraw_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::brokerage::Withdraw& Update_BrokerageAccount_Req::withdraw() const {
  // @@protoc_insertion_point(field_get:brokerage.Update_BrokerageAccount_Req.withdraw)
  return has_withdraw()
      ? *payload_.withdraw_
      : *reinterpret_cast< ::brokerage::Withdraw*>(&::brokerage::_Withdraw_default_instance_);
}
inline ::brokerage::Withdraw* Update_BrokerageAccount_Req::mutable_withdraw() {
  if (!has_withdraw()) {
    clear_payload();
    set_has_withdraw();
    payload_.withdraw_ = CreateMaybeMessage< ::brokerage::Withdraw >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Update_BrokerageAccount_Req.withdraw)
  return payload_.withdraw_;
}

// .brokerage.Deposit deposit = 3;
inline bool Update_BrokerageAccount_Req::has_deposit() const {
  return payload_case() == kDeposit;
}
inline void Update_BrokerageAccount_Req::set_has_deposit() {
  _oneof_case_[0] = kDeposit;
}
inline void Update_BrokerageAccount_Req::clear_deposit() {
  if (has_deposit()) {
    delete payload_.deposit_;
    clear_has_payload();
  }
}
inline const ::brokerage::Deposit& Update_BrokerageAccount_Req::_internal_deposit() const {
  return *payload_.deposit_;
}
inline ::brokerage::Deposit* Update_BrokerageAccount_Req::release_deposit() {
  // @@protoc_insertion_point(field_release:brokerage.Update_BrokerageAccount_Req.deposit)
  if (has_deposit()) {
    clear_has_payload();
      ::brokerage::Deposit* temp = payload_.deposit_;
    payload_.deposit_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::brokerage::Deposit& Update_BrokerageAccount_Req::deposit() const {
  // @@protoc_insertion_point(field_get:brokerage.Update_BrokerageAccount_Req.deposit)
  return has_deposit()
      ? *payload_.deposit_
      : *reinterpret_cast< ::brokerage::Deposit*>(&::brokerage::_Deposit_default_instance_);
}
inline ::brokerage::Deposit* Update_BrokerageAccount_Req::mutable_deposit() {
  if (!has_deposit()) {
    clear_payload();
    set_has_deposit();
    payload_.deposit_ = CreateMaybeMessage< ::brokerage::Deposit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Update_BrokerageAccount_Req.deposit)
  return payload_.deposit_;
}

inline bool Update_BrokerageAccount_Req::has_payload() const {
  return payload_case() != PAYLOAD_NOT_SET;
}
inline void Update_BrokerageAccount_Req::clear_has_payload() {
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline Update_BrokerageAccount_Req::PayloadCase Update_BrokerageAccount_Req::payload_case() const {
  return Update_BrokerageAccount_Req::PayloadCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Update_BrokerageAccount_Rep

// .Header header = 1;
inline bool Update_BrokerageAccount_Rep::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::Header& Update_BrokerageAccount_Rep::_internal_header() const {
  return *header_;
}
inline const ::Header& Update_BrokerageAccount_Rep::header() const {
  const ::Header* p = header_;
  // @@protoc_insertion_point(field_get:brokerage.Update_BrokerageAccount_Rep.header)
  return p != NULL ? *p : *reinterpret_cast<const ::Header*>(
      &::_Header_default_instance_);
}
inline ::Header* Update_BrokerageAccount_Rep::release_header() {
  // @@protoc_insertion_point(field_release:brokerage.Update_BrokerageAccount_Rep.header)
  
  ::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::Header* Update_BrokerageAccount_Rep::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Update_BrokerageAccount_Rep.header)
  return header_;
}
inline void Update_BrokerageAccount_Rep::set_allocated_header(::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:brokerage.Update_BrokerageAccount_Rep.header)
}

// .brokerage.Update_BrokerageAccount_Rep.ResponseType response = 2;
inline void Update_BrokerageAccount_Rep::clear_response() {
  response_ = 0;
}
inline ::brokerage::Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep::response() const {
  // @@protoc_insertion_point(field_get:brokerage.Update_BrokerageAccount_Rep.response)
  return static_cast< ::brokerage::Update_BrokerageAccount_Rep_ResponseType >(response_);
}
inline void Update_BrokerageAccount_Rep::set_response(::brokerage::Update_BrokerageAccount_Rep_ResponseType value) {
  
  response_ = value;
  // @@protoc_insertion_point(field_set:brokerage.Update_BrokerageAccount_Rep.response)
}

// -------------------------------------------------------------------

// Deposit

// .BrokerageId brokerage_id = 1;
inline bool Deposit::has_brokerage_id() const {
  return this != internal_default_instance() && brokerage_id_ != NULL;
}
inline const ::BrokerageId& Deposit::_internal_brokerage_id() const {
  return *brokerage_id_;
}
inline const ::BrokerageId& Deposit::brokerage_id() const {
  const ::BrokerageId* p = brokerage_id_;
  // @@protoc_insertion_point(field_get:brokerage.Deposit.brokerage_id)
  return p != NULL ? *p : *reinterpret_cast<const ::BrokerageId*>(
      &::_BrokerageId_default_instance_);
}
inline ::BrokerageId* Deposit::release_brokerage_id() {
  // @@protoc_insertion_point(field_release:brokerage.Deposit.brokerage_id)
  
  ::BrokerageId* temp = brokerage_id_;
  brokerage_id_ = NULL;
  return temp;
}
inline ::BrokerageId* Deposit::mutable_brokerage_id() {
  
  if (brokerage_id_ == NULL) {
    auto* p = CreateMaybeMessage<::BrokerageId>(GetArenaNoVirtual());
    brokerage_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Deposit.brokerage_id)
  return brokerage_id_;
}
inline void Deposit::set_allocated_brokerage_id(::BrokerageId* brokerage_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(brokerage_id_);
  }
  if (brokerage_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      brokerage_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brokerage_id, submessage_arena);
    }
    
  } else {
    
  }
  brokerage_id_ = brokerage_id;
  // @@protoc_insertion_point(field_set_allocated:brokerage.Deposit.brokerage_id)
}

// .Price price = 2;
inline bool Deposit::has_price() const {
  return this != internal_default_instance() && price_ != NULL;
}
inline const ::Price& Deposit::_internal_price() const {
  return *price_;
}
inline const ::Price& Deposit::price() const {
  const ::Price* p = price_;
  // @@protoc_insertion_point(field_get:brokerage.Deposit.price)
  return p != NULL ? *p : *reinterpret_cast<const ::Price*>(
      &::_Price_default_instance_);
}
inline ::Price* Deposit::release_price() {
  // @@protoc_insertion_point(field_release:brokerage.Deposit.price)
  
  ::Price* temp = price_;
  price_ = NULL;
  return temp;
}
inline ::Price* Deposit::mutable_price() {
  
  if (price_ == NULL) {
    auto* p = CreateMaybeMessage<::Price>(GetArenaNoVirtual());
    price_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Deposit.price)
  return price_;
}
inline void Deposit::set_allocated_price(::Price* price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(price_);
  }
  if (price) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      price = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, price, submessage_arena);
    }
    
  } else {
    
  }
  price_ = price;
  // @@protoc_insertion_point(field_set_allocated:brokerage.Deposit.price)
}

// -------------------------------------------------------------------

// Withdraw

// .BrokerageId brokerage_id = 1;
inline bool Withdraw::has_brokerage_id() const {
  return this != internal_default_instance() && brokerage_id_ != NULL;
}
inline const ::BrokerageId& Withdraw::_internal_brokerage_id() const {
  return *brokerage_id_;
}
inline const ::BrokerageId& Withdraw::brokerage_id() const {
  const ::BrokerageId* p = brokerage_id_;
  // @@protoc_insertion_point(field_get:brokerage.Withdraw.brokerage_id)
  return p != NULL ? *p : *reinterpret_cast<const ::BrokerageId*>(
      &::_BrokerageId_default_instance_);
}
inline ::BrokerageId* Withdraw::release_brokerage_id() {
  // @@protoc_insertion_point(field_release:brokerage.Withdraw.brokerage_id)
  
  ::BrokerageId* temp = brokerage_id_;
  brokerage_id_ = NULL;
  return temp;
}
inline ::BrokerageId* Withdraw::mutable_brokerage_id() {
  
  if (brokerage_id_ == NULL) {
    auto* p = CreateMaybeMessage<::BrokerageId>(GetArenaNoVirtual());
    brokerage_id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Withdraw.brokerage_id)
  return brokerage_id_;
}
inline void Withdraw::set_allocated_brokerage_id(::BrokerageId* brokerage_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(brokerage_id_);
  }
  if (brokerage_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      brokerage_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, brokerage_id, submessage_arena);
    }
    
  } else {
    
  }
  brokerage_id_ = brokerage_id;
  // @@protoc_insertion_point(field_set_allocated:brokerage.Withdraw.brokerage_id)
}

// .Price price = 2;
inline bool Withdraw::has_price() const {
  return this != internal_default_instance() && price_ != NULL;
}
inline const ::Price& Withdraw::_internal_price() const {
  return *price_;
}
inline const ::Price& Withdraw::price() const {
  const ::Price* p = price_;
  // @@protoc_insertion_point(field_get:brokerage.Withdraw.price)
  return p != NULL ? *p : *reinterpret_cast<const ::Price*>(
      &::_Price_default_instance_);
}
inline ::Price* Withdraw::release_price() {
  // @@protoc_insertion_point(field_release:brokerage.Withdraw.price)
  
  ::Price* temp = price_;
  price_ = NULL;
  return temp;
}
inline ::Price* Withdraw::mutable_price() {
  
  if (price_ == NULL) {
    auto* p = CreateMaybeMessage<::Price>(GetArenaNoVirtual());
    price_ = p;
  }
  // @@protoc_insertion_point(field_mutable:brokerage.Withdraw.price)
  return price_;
}
inline void Withdraw::set_allocated_price(::Price* price) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(price_);
  }
  if (price) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      price = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, price, submessage_arena);
    }
    
  } else {
    
  }
  price_ = price;
  // @@protoc_insertion_point(field_set_allocated:brokerage.Withdraw.price)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace brokerage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::brokerage::EndOfDaySummaryRequest_Operation> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::brokerage::EndOfDaySummaryRequest_Operation>() {
  return ::brokerage::EndOfDaySummaryRequest_Operation_descriptor();
}
template <> struct is_proto_enum< ::brokerage::EndOfDayResponse_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::brokerage::EndOfDayResponse_Status>() {
  return ::brokerage::EndOfDayResponse_Status_descriptor();
}
template <> struct is_proto_enum< ::brokerage::Update_BrokerageAccount_Rep_ResponseType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::brokerage::Update_BrokerageAccount_Rep_ResponseType>() {
  return ::brokerage::Update_BrokerageAccount_Rep_ResponseType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_bank_5fto_5fbrokerage_2eproto

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bankClient/bank_to_brokerage.proto

#include "bankClient/bank_to_brokerage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR EndOfDaySummaryRequest_Transaction::EndOfDaySummaryRequest_Transaction(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.amount_)*/nullptr
  , /*decltype(_impl_.operation_)*/0
  , /*decltype(_impl_.component_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EndOfDaySummaryRequest_TransactionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndOfDaySummaryRequest_TransactionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndOfDaySummaryRequest_TransactionDefaultTypeInternal() {}
  union {
    EndOfDaySummaryRequest_Transaction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndOfDaySummaryRequest_TransactionDefaultTypeInternal _EndOfDaySummaryRequest_Transaction_default_instance_;
PROTOBUF_CONSTEXPR EndOfDaySummaryRequest::EndOfDaySummaryRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.transactions_)*/{}
  , /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EndOfDaySummaryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndOfDaySummaryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndOfDaySummaryRequestDefaultTypeInternal() {}
  union {
    EndOfDaySummaryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndOfDaySummaryRequestDefaultTypeInternal _EndOfDaySummaryRequest_default_instance_;
PROTOBUF_CONSTEXPR EndOfDayResponse::EndOfDayResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EndOfDayResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EndOfDayResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EndOfDayResponseDefaultTypeInternal() {}
  union {
    EndOfDayResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EndOfDayResponseDefaultTypeInternal _EndOfDayResponse_default_instance_;
PROTOBUF_CONSTEXPR Deposit::Deposit(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.price_)*/nullptr
  , /*decltype(_impl_.brokerage_id_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DepositDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DepositDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DepositDefaultTypeInternal() {}
  union {
    Deposit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DepositDefaultTypeInternal _Deposit_default_instance_;
PROTOBUF_CONSTEXPR Withdraw::Withdraw(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.price_)*/nullptr
  , /*decltype(_impl_.brokerage_id_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WithdrawDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WithdrawDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WithdrawDefaultTypeInternal() {}
  union {
    Withdraw _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WithdrawDefaultTypeInternal _Withdraw_default_instance_;
PROTOBUF_CONSTEXPR Update_BrokerageAccount_Req::Update_BrokerageAccount_Req(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.payload_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct Update_BrokerageAccount_ReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Update_BrokerageAccount_ReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Update_BrokerageAccount_ReqDefaultTypeInternal() {}
  union {
    Update_BrokerageAccount_Req _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Update_BrokerageAccount_ReqDefaultTypeInternal _Update_BrokerageAccount_Req_default_instance_;
PROTOBUF_CONSTEXPR Update_BrokerageAccount_Rep::Update_BrokerageAccount_Rep(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.header_)*/nullptr
  , /*decltype(_impl_.brokerage_id_)*/nullptr
  , /*decltype(_impl_.response_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Update_BrokerageAccount_RepDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Update_BrokerageAccount_RepDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Update_BrokerageAccount_RepDefaultTypeInternal() {}
  union {
    Update_BrokerageAccount_Rep _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Update_BrokerageAccount_RepDefaultTypeInternal _Update_BrokerageAccount_Rep_default_instance_;
static ::_pb::Metadata file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[7];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto[3];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto = nullptr;

const uint32_t TableStruct_bankClient_2fbank_5fto_5fbrokerage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest_Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest_Transaction, _impl_.operation_),
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest_Transaction, _impl_.amount_),
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest_Transaction, _impl_.component_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::EndOfDaySummaryRequest, _impl_.transactions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::EndOfDayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::EndOfDayResponse, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::EndOfDayResponse, _impl_.status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Deposit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Deposit, _impl_.price_),
  PROTOBUF_FIELD_OFFSET(::Deposit, _impl_.brokerage_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Withdraw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Withdraw, _impl_.price_),
  PROTOBUF_FIELD_OFFSET(::Withdraw, _impl_.brokerage_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Req, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Req, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Req, _impl_.header_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Req, _impl_.payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Rep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Rep, _impl_.header_),
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Rep, _impl_.brokerage_id_),
  PROTOBUF_FIELD_OFFSET(::Update_BrokerageAccount_Rep, _impl_.response_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::EndOfDaySummaryRequest_Transaction)},
  { 9, -1, -1, sizeof(::EndOfDaySummaryRequest)},
  { 17, -1, -1, sizeof(::EndOfDayResponse)},
  { 25, -1, -1, sizeof(::Deposit)},
  { 33, -1, -1, sizeof(::Withdraw)},
  { 41, -1, -1, sizeof(::Update_BrokerageAccount_Req)},
  { 51, -1, -1, sizeof(::Update_BrokerageAccount_Rep)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_EndOfDaySummaryRequest_Transaction_default_instance_._instance,
  &::_EndOfDaySummaryRequest_default_instance_._instance,
  &::_EndOfDayResponse_default_instance_._instance,
  &::_Deposit_default_instance_._instance,
  &::_Withdraw_default_instance_._instance,
  &::_Update_BrokerageAccount_Req_default_instance_._instance,
  &::_Update_BrokerageAccount_Rep_default_instance_._instance,
};

const char descriptor_table_protodef_bankClient_2fbank_5fto_5fbrokerage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"bankClient/bank_to_brokerage.proto\032\014co"
  "mmon.proto\"\214\002\n\026EndOfDaySummaryRequest\022\027\n"
  "\006header\030\001 \001(\0132\007.Header\0229\n\014transactions\030\002"
  " \003(\0132#.EndOfDaySummaryRequest.Transactio"
  "n\032v\n\013Transaction\0224\n\toperation\030\001 \001(\0162!.En"
  "dOfDaySummaryRequest.Operation\022\026\n\006amount"
  "\030\002 \001(\0132\006.Price\022\031\n\tcomponent\030\003 \001(\0162\006.Magi"
  "c\"&\n\tOperation\022\013\n\007DEPOSIT\020\000\022\014\n\010WITHDRAW\020"
  "\001\"|\n\020EndOfDayResponse\022\027\n\006header\030\001 \001(\0132\007."
  "Header\022(\n\006status\030\002 \001(\0162\030.EndOfDayRespons"
  "e.Status\"%\n\006Status\022\013\n\007SUCCESS\020\000\022\016\n\nRETRA"
  "NSMIT\020\001\"D\n\007Deposit\022\025\n\005price\030\001 \001(\0132\006.Pric"
  "e\022\"\n\014brokerage_id\030\002 \001(\0132\014.BrokerageId\"7\n"
  "\010Withdraw\022\025\n\005price\030\001 \001(\0132\006.Price\022\024\n\014brok"
  "erage_id\030\002 \001(\r\"}\n\033Update_BrokerageAccoun"
  "t_Req\022\027\n\006header\030\001 \001(\0132\007.Header\022\033\n\007deposi"
  "t\030\002 \001(\0132\010.DepositH\000\022\035\n\010withdraw\030\003 \001(\0132\t."
  "WithdrawH\000B\t\n\007payload\"\330\001\n\033Update_Brokera"
  "geAccount_Rep\022\027\n\006header\030\001 \001(\0132\007.Header\022\""
  "\n\014brokerage_id\030\003 \001(\0132\014.BrokerageId\022;\n\010re"
  "sponse\030\004 \001(\0162).Update_BrokerageAccount_R"
  "ep.ResponseType\"\?\n\014ResponseType\022\013\n\007INVAL"
  "ID\020\000\022\025\n\021MALFORMED_MESSAGE\020\001\022\013\n\007SUCCESS\020\004"
  "b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::_pbi::once_flag descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto = {
    false, false, 928, descriptor_table_protodef_bankClient_2fbank_5fto_5fbrokerage_2eproto,
    "bankClient/bank_to_brokerage.proto",
    &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once, descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_deps, 1, 7,
    schemas, file_default_instances, TableStruct_bankClient_2fbank_5fto_5fbrokerage_2eproto::offsets,
    file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto, file_level_enum_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto,
    file_level_service_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter() {
  return &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_bankClient_2fbank_5fto_5fbrokerage_2eproto(&descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EndOfDaySummaryRequest_Operation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto);
  return file_level_enum_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto[0];
}
bool EndOfDaySummaryRequest_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest::DEPOSIT;
constexpr EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest::WITHDRAW;
constexpr EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest::Operation_MIN;
constexpr EndOfDaySummaryRequest_Operation EndOfDaySummaryRequest::Operation_MAX;
constexpr int EndOfDaySummaryRequest::Operation_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EndOfDayResponse_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto);
  return file_level_enum_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto[1];
}
bool EndOfDayResponse_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr EndOfDayResponse_Status EndOfDayResponse::SUCCESS;
constexpr EndOfDayResponse_Status EndOfDayResponse::RETRANSMIT;
constexpr EndOfDayResponse_Status EndOfDayResponse::Status_MIN;
constexpr EndOfDayResponse_Status EndOfDayResponse::Status_MAX;
constexpr int EndOfDayResponse::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Update_BrokerageAccount_Rep_ResponseType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto);
  return file_level_enum_descriptors_bankClient_2fbank_5fto_5fbrokerage_2eproto[2];
}
bool Update_BrokerageAccount_Rep_ResponseType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep::INVALID;
constexpr Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep::MALFORMED_MESSAGE;
constexpr Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep::SUCCESS;
constexpr Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep::ResponseType_MIN;
constexpr Update_BrokerageAccount_Rep_ResponseType Update_BrokerageAccount_Rep::ResponseType_MAX;
constexpr int Update_BrokerageAccount_Rep::ResponseType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class EndOfDaySummaryRequest_Transaction::_Internal {
 public:
  static const ::Price& amount(const EndOfDaySummaryRequest_Transaction* msg);
};

const ::Price&
EndOfDaySummaryRequest_Transaction::_Internal::amount(const EndOfDaySummaryRequest_Transaction* msg) {
  return *msg->_impl_.amount_;
}
void EndOfDaySummaryRequest_Transaction::clear_amount() {
  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
}
EndOfDaySummaryRequest_Transaction::EndOfDaySummaryRequest_Transaction(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:EndOfDaySummaryRequest.Transaction)
}
EndOfDaySummaryRequest_Transaction::EndOfDaySummaryRequest_Transaction(const EndOfDaySummaryRequest_Transaction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EndOfDaySummaryRequest_Transaction* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.operation_){}
    , decltype(_impl_.component_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_amount()) {
    _this->_impl_.amount_ = new ::Price(*from._impl_.amount_);
  }
  ::memcpy(&_impl_.operation_, &from._impl_.operation_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.component_) -
    reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.component_));
  // @@protoc_insertion_point(copy_constructor:EndOfDaySummaryRequest.Transaction)
}

inline void EndOfDaySummaryRequest_Transaction::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.amount_){nullptr}
    , decltype(_impl_.operation_){0}
    , decltype(_impl_.component_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EndOfDaySummaryRequest_Transaction::~EndOfDaySummaryRequest_Transaction() {
  // @@protoc_insertion_point(destructor:EndOfDaySummaryRequest.Transaction)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EndOfDaySummaryRequest_Transaction::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.amount_;
}

void EndOfDaySummaryRequest_Transaction::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EndOfDaySummaryRequest_Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:EndOfDaySummaryRequest.Transaction)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.amount_ != nullptr) {
    delete _impl_.amount_;
  }
  _impl_.amount_ = nullptr;
  ::memset(&_impl_.operation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.component_) -
      reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.component_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EndOfDaySummaryRequest_Transaction::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .EndOfDaySummaryRequest.Operation operation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_operation(static_cast<::EndOfDaySummaryRequest_Operation>(val));
        } else
          goto handle_unusual;
        continue;
      // .Price amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Magic component = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_component(static_cast<::Magic>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EndOfDaySummaryRequest_Transaction::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EndOfDaySummaryRequest.Transaction)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .EndOfDaySummaryRequest.Operation operation = 1;
  if (this->_internal_operation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_operation(), target);
  }

  // .Price amount = 2;
  if (this->_internal_has_amount()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // .Magic component = 3;
  if (this->_internal_component() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_component(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EndOfDaySummaryRequest.Transaction)
  return target;
}

size_t EndOfDaySummaryRequest_Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EndOfDaySummaryRequest.Transaction)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Price amount = 2;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.amount_);
  }

  // .EndOfDaySummaryRequest.Operation operation = 1;
  if (this->_internal_operation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_operation());
  }

  // .Magic component = 3;
  if (this->_internal_component() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_component());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EndOfDaySummaryRequest_Transaction::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EndOfDaySummaryRequest_Transaction::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EndOfDaySummaryRequest_Transaction::GetClassData() const { return &_class_data_; }


void EndOfDaySummaryRequest_Transaction::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EndOfDaySummaryRequest_Transaction*>(&to_msg);
  auto& from = static_cast<const EndOfDaySummaryRequest_Transaction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EndOfDaySummaryRequest.Transaction)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_amount()) {
    _this->_internal_mutable_amount()->::Price::MergeFrom(
        from._internal_amount());
  }
  if (from._internal_operation() != 0) {
    _this->_internal_set_operation(from._internal_operation());
  }
  if (from._internal_component() != 0) {
    _this->_internal_set_component(from._internal_component());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EndOfDaySummaryRequest_Transaction::CopyFrom(const EndOfDaySummaryRequest_Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EndOfDaySummaryRequest.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndOfDaySummaryRequest_Transaction::IsInitialized() const {
  return true;
}

void EndOfDaySummaryRequest_Transaction::InternalSwap(EndOfDaySummaryRequest_Transaction* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EndOfDaySummaryRequest_Transaction, _impl_.component_)
      + sizeof(EndOfDaySummaryRequest_Transaction::_impl_.component_)
      - PROTOBUF_FIELD_OFFSET(EndOfDaySummaryRequest_Transaction, _impl_.amount_)>(
          reinterpret_cast<char*>(&_impl_.amount_),
          reinterpret_cast<char*>(&other->_impl_.amount_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EndOfDaySummaryRequest_Transaction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[0]);
}

// ===================================================================

class EndOfDaySummaryRequest::_Internal {
 public:
  static const ::Header& header(const EndOfDaySummaryRequest* msg);
};

const ::Header&
EndOfDaySummaryRequest::_Internal::header(const EndOfDaySummaryRequest* msg) {
  return *msg->_impl_.header_;
}
void EndOfDaySummaryRequest::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
EndOfDaySummaryRequest::EndOfDaySummaryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:EndOfDaySummaryRequest)
}
EndOfDaySummaryRequest::EndOfDaySummaryRequest(const EndOfDaySummaryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EndOfDaySummaryRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.transactions_){from._impl_.transactions_}
    , decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::Header(*from._impl_.header_);
  }
  // @@protoc_insertion_point(copy_constructor:EndOfDaySummaryRequest)
}

inline void EndOfDaySummaryRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.transactions_){arena}
    , decltype(_impl_.header_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EndOfDaySummaryRequest::~EndOfDaySummaryRequest() {
  // @@protoc_insertion_point(destructor:EndOfDaySummaryRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EndOfDaySummaryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.transactions_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.header_;
}

void EndOfDaySummaryRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EndOfDaySummaryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:EndOfDaySummaryRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transactions_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EndOfDaySummaryRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .EndOfDaySummaryRequest.Transaction transactions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_transactions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EndOfDaySummaryRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EndOfDaySummaryRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // repeated .EndOfDaySummaryRequest.Transaction transactions = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_transactions_size()); i < n; i++) {
    const auto& repfield = this->_internal_transactions(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EndOfDaySummaryRequest)
  return target;
}

size_t EndOfDaySummaryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EndOfDaySummaryRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .EndOfDaySummaryRequest.Transaction transactions = 2;
  total_size += 1UL * this->_internal_transactions_size();
  for (const auto& msg : this->_impl_.transactions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EndOfDaySummaryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EndOfDaySummaryRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EndOfDaySummaryRequest::GetClassData() const { return &_class_data_; }


void EndOfDaySummaryRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EndOfDaySummaryRequest*>(&to_msg);
  auto& from = static_cast<const EndOfDaySummaryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EndOfDaySummaryRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.transactions_.MergeFrom(from._impl_.transactions_);
  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::Header::MergeFrom(
        from._internal_header());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EndOfDaySummaryRequest::CopyFrom(const EndOfDaySummaryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EndOfDaySummaryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndOfDaySummaryRequest::IsInitialized() const {
  return true;
}

void EndOfDaySummaryRequest::InternalSwap(EndOfDaySummaryRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.transactions_.InternalSwap(&other->_impl_.transactions_);
  swap(_impl_.header_, other->_impl_.header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EndOfDaySummaryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[1]);
}

// ===================================================================

class EndOfDayResponse::_Internal {
 public:
  static const ::Header& header(const EndOfDayResponse* msg);
};

const ::Header&
EndOfDayResponse::_Internal::header(const EndOfDayResponse* msg) {
  return *msg->_impl_.header_;
}
void EndOfDayResponse::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
EndOfDayResponse::EndOfDayResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:EndOfDayResponse)
}
EndOfDayResponse::EndOfDayResponse(const EndOfDayResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EndOfDayResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::Header(*from._impl_.header_);
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:EndOfDayResponse)
}

inline void EndOfDayResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EndOfDayResponse::~EndOfDayResponse() {
  // @@protoc_insertion_point(destructor:EndOfDayResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EndOfDayResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
}

void EndOfDayResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EndOfDayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:EndOfDayResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  _impl_.status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EndOfDayResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .EndOfDayResponse.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::EndOfDayResponse_Status>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EndOfDayResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:EndOfDayResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .EndOfDayResponse.Status status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EndOfDayResponse)
  return target;
}

size_t EndOfDayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EndOfDayResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .EndOfDayResponse.Status status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EndOfDayResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EndOfDayResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EndOfDayResponse::GetClassData() const { return &_class_data_; }


void EndOfDayResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EndOfDayResponse*>(&to_msg);
  auto& from = static_cast<const EndOfDayResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EndOfDayResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EndOfDayResponse::CopyFrom(const EndOfDayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EndOfDayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndOfDayResponse::IsInitialized() const {
  return true;
}

void EndOfDayResponse::InternalSwap(EndOfDayResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EndOfDayResponse, _impl_.status_)
      + sizeof(EndOfDayResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(EndOfDayResponse, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EndOfDayResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[2]);
}

// ===================================================================

class Deposit::_Internal {
 public:
  static const ::Price& price(const Deposit* msg);
  static const ::BrokerageId& brokerage_id(const Deposit* msg);
};

const ::Price&
Deposit::_Internal::price(const Deposit* msg) {
  return *msg->_impl_.price_;
}
const ::BrokerageId&
Deposit::_Internal::brokerage_id(const Deposit* msg) {
  return *msg->_impl_.brokerage_id_;
}
void Deposit::clear_price() {
  if (GetArenaForAllocation() == nullptr && _impl_.price_ != nullptr) {
    delete _impl_.price_;
  }
  _impl_.price_ = nullptr;
}
void Deposit::clear_brokerage_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.brokerage_id_ != nullptr) {
    delete _impl_.brokerage_id_;
  }
  _impl_.brokerage_id_ = nullptr;
}
Deposit::Deposit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Deposit)
}
Deposit::Deposit(const Deposit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Deposit* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){nullptr}
    , decltype(_impl_.brokerage_id_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_price()) {
    _this->_impl_.price_ = new ::Price(*from._impl_.price_);
  }
  if (from._internal_has_brokerage_id()) {
    _this->_impl_.brokerage_id_ = new ::BrokerageId(*from._impl_.brokerage_id_);
  }
  // @@protoc_insertion_point(copy_constructor:Deposit)
}

inline void Deposit::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){nullptr}
    , decltype(_impl_.brokerage_id_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Deposit::~Deposit() {
  // @@protoc_insertion_point(destructor:Deposit)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Deposit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.price_;
  if (this != internal_default_instance()) delete _impl_.brokerage_id_;
}

void Deposit::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Deposit::Clear() {
// @@protoc_insertion_point(message_clear_start:Deposit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.price_ != nullptr) {
    delete _impl_.price_;
  }
  _impl_.price_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.brokerage_id_ != nullptr) {
    delete _impl_.brokerage_id_;
  }
  _impl_.brokerage_id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Deposit::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Price price = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_price(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .BrokerageId brokerage_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_brokerage_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Deposit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Deposit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Price price = 1;
  if (this->_internal_has_price()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // .BrokerageId brokerage_id = 2;
  if (this->_internal_has_brokerage_id()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::brokerage_id(this),
        _Internal::brokerage_id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Deposit)
  return target;
}

size_t Deposit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Deposit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Price price = 1;
  if (this->_internal_has_price()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.price_);
  }

  // .BrokerageId brokerage_id = 2;
  if (this->_internal_has_brokerage_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.brokerage_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Deposit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Deposit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Deposit::GetClassData() const { return &_class_data_; }


void Deposit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Deposit*>(&to_msg);
  auto& from = static_cast<const Deposit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Deposit)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_price()) {
    _this->_internal_mutable_price()->::Price::MergeFrom(
        from._internal_price());
  }
  if (from._internal_has_brokerage_id()) {
    _this->_internal_mutable_brokerage_id()->::BrokerageId::MergeFrom(
        from._internal_brokerage_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Deposit::CopyFrom(const Deposit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Deposit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Deposit::IsInitialized() const {
  return true;
}

void Deposit::InternalSwap(Deposit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Deposit, _impl_.brokerage_id_)
      + sizeof(Deposit::_impl_.brokerage_id_)
      - PROTOBUF_FIELD_OFFSET(Deposit, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Deposit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[3]);
}

// ===================================================================

class Withdraw::_Internal {
 public:
  static const ::Price& price(const Withdraw* msg);
};

const ::Price&
Withdraw::_Internal::price(const Withdraw* msg) {
  return *msg->_impl_.price_;
}
void Withdraw::clear_price() {
  if (GetArenaForAllocation() == nullptr && _impl_.price_ != nullptr) {
    delete _impl_.price_;
  }
  _impl_.price_ = nullptr;
}
Withdraw::Withdraw(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Withdraw)
}
Withdraw::Withdraw(const Withdraw& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Withdraw* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){nullptr}
    , decltype(_impl_.brokerage_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_price()) {
    _this->_impl_.price_ = new ::Price(*from._impl_.price_);
  }
  _this->_impl_.brokerage_id_ = from._impl_.brokerage_id_;
  // @@protoc_insertion_point(copy_constructor:Withdraw)
}

inline void Withdraw::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.price_){nullptr}
    , decltype(_impl_.brokerage_id_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Withdraw::~Withdraw() {
  // @@protoc_insertion_point(destructor:Withdraw)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Withdraw::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.price_;
}

void Withdraw::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Withdraw::Clear() {
// @@protoc_insertion_point(message_clear_start:Withdraw)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.price_ != nullptr) {
    delete _impl_.price_;
  }
  _impl_.price_ = nullptr;
  _impl_.brokerage_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Withdraw::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Price price = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_price(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 brokerage_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.brokerage_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Withdraw::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Withdraw)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Price price = 1;
  if (this->_internal_has_price()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::price(this),
        _Internal::price(this).GetCachedSize(), target, stream);
  }

  // uint32 brokerage_id = 2;
  if (this->_internal_brokerage_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_brokerage_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Withdraw)
  return target;
}

size_t Withdraw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Withdraw)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Price price = 1;
  if (this->_internal_has_price()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.price_);
  }

  // uint32 brokerage_id = 2;
  if (this->_internal_brokerage_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_brokerage_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Withdraw::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Withdraw::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Withdraw::GetClassData() const { return &_class_data_; }


void Withdraw::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Withdraw*>(&to_msg);
  auto& from = static_cast<const Withdraw&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Withdraw)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_price()) {
    _this->_internal_mutable_price()->::Price::MergeFrom(
        from._internal_price());
  }
  if (from._internal_brokerage_id() != 0) {
    _this->_internal_set_brokerage_id(from._internal_brokerage_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Withdraw::CopyFrom(const Withdraw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Withdraw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Withdraw::IsInitialized() const {
  return true;
}

void Withdraw::InternalSwap(Withdraw* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Withdraw, _impl_.brokerage_id_)
      + sizeof(Withdraw::_impl_.brokerage_id_)
      - PROTOBUF_FIELD_OFFSET(Withdraw, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Withdraw::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[4]);
}

// ===================================================================

class Update_BrokerageAccount_Req::_Internal {
 public:
  static const ::Header& header(const Update_BrokerageAccount_Req* msg);
  static const ::Deposit& deposit(const Update_BrokerageAccount_Req* msg);
  static const ::Withdraw& withdraw(const Update_BrokerageAccount_Req* msg);
};

const ::Header&
Update_BrokerageAccount_Req::_Internal::header(const Update_BrokerageAccount_Req* msg) {
  return *msg->_impl_.header_;
}
const ::Deposit&
Update_BrokerageAccount_Req::_Internal::deposit(const Update_BrokerageAccount_Req* msg) {
  return *msg->_impl_.payload_.deposit_;
}
const ::Withdraw&
Update_BrokerageAccount_Req::_Internal::withdraw(const Update_BrokerageAccount_Req* msg) {
  return *msg->_impl_.payload_.withdraw_;
}
void Update_BrokerageAccount_Req::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Update_BrokerageAccount_Req::set_allocated_deposit(::Deposit* deposit) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (deposit) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(deposit);
    if (message_arena != submessage_arena) {
      deposit = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, deposit, submessage_arena);
    }
    set_has_deposit();
    _impl_.payload_.deposit_ = deposit;
  }
  // @@protoc_insertion_point(field_set_allocated:Update_BrokerageAccount_Req.deposit)
}
void Update_BrokerageAccount_Req::set_allocated_withdraw(::Withdraw* withdraw) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_payload();
  if (withdraw) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(withdraw);
    if (message_arena != submessage_arena) {
      withdraw = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, withdraw, submessage_arena);
    }
    set_has_withdraw();
    _impl_.payload_.withdraw_ = withdraw;
  }
  // @@protoc_insertion_point(field_set_allocated:Update_BrokerageAccount_Req.withdraw)
}
Update_BrokerageAccount_Req::Update_BrokerageAccount_Req(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Update_BrokerageAccount_Req)
}
Update_BrokerageAccount_Req::Update_BrokerageAccount_Req(const Update_BrokerageAccount_Req& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Update_BrokerageAccount_Req* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::Header(*from._impl_.header_);
  }
  clear_has_payload();
  switch (from.payload_case()) {
    case kDeposit: {
      _this->_internal_mutable_deposit()->::Deposit::MergeFrom(
          from._internal_deposit());
      break;
    }
    case kWithdraw: {
      _this->_internal_mutable_withdraw()->::Withdraw::MergeFrom(
          from._internal_withdraw());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Update_BrokerageAccount_Req)
}

inline void Update_BrokerageAccount_Req::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.payload_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_payload();
}

Update_BrokerageAccount_Req::~Update_BrokerageAccount_Req() {
  // @@protoc_insertion_point(destructor:Update_BrokerageAccount_Req)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Update_BrokerageAccount_Req::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (has_payload()) {
    clear_payload();
  }
}

void Update_BrokerageAccount_Req::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Update_BrokerageAccount_Req::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:Update_BrokerageAccount_Req)
  switch (payload_case()) {
    case kDeposit: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.deposit_;
      }
      break;
    }
    case kWithdraw: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.payload_.withdraw_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


void Update_BrokerageAccount_Req::Clear() {
// @@protoc_insertion_point(message_clear_start:Update_BrokerageAccount_Req)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Update_BrokerageAccount_Req::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Deposit deposit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_deposit(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Withdraw withdraw = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_withdraw(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Update_BrokerageAccount_Req::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Update_BrokerageAccount_Req)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .Deposit deposit = 2;
  if (_internal_has_deposit()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::deposit(this),
        _Internal::deposit(this).GetCachedSize(), target, stream);
  }

  // .Withdraw withdraw = 3;
  if (_internal_has_withdraw()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::withdraw(this),
        _Internal::withdraw(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Update_BrokerageAccount_Req)
  return target;
}

size_t Update_BrokerageAccount_Req::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Update_BrokerageAccount_Req)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  switch (payload_case()) {
    // .Deposit deposit = 2;
    case kDeposit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.deposit_);
      break;
    }
    // .Withdraw withdraw = 3;
    case kWithdraw: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.payload_.withdraw_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Update_BrokerageAccount_Req::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Update_BrokerageAccount_Req::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Update_BrokerageAccount_Req::GetClassData() const { return &_class_data_; }


void Update_BrokerageAccount_Req::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Update_BrokerageAccount_Req*>(&to_msg);
  auto& from = static_cast<const Update_BrokerageAccount_Req&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Update_BrokerageAccount_Req)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::Header::MergeFrom(
        from._internal_header());
  }
  switch (from.payload_case()) {
    case kDeposit: {
      _this->_internal_mutable_deposit()->::Deposit::MergeFrom(
          from._internal_deposit());
      break;
    }
    case kWithdraw: {
      _this->_internal_mutable_withdraw()->::Withdraw::MergeFrom(
          from._internal_withdraw());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Update_BrokerageAccount_Req::CopyFrom(const Update_BrokerageAccount_Req& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Update_BrokerageAccount_Req)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update_BrokerageAccount_Req::IsInitialized() const {
  return true;
}

void Update_BrokerageAccount_Req::InternalSwap(Update_BrokerageAccount_Req* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.header_, other->_impl_.header_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Update_BrokerageAccount_Req::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[5]);
}

// ===================================================================

class Update_BrokerageAccount_Rep::_Internal {
 public:
  static const ::Header& header(const Update_BrokerageAccount_Rep* msg);
  static const ::BrokerageId& brokerage_id(const Update_BrokerageAccount_Rep* msg);
};

const ::Header&
Update_BrokerageAccount_Rep::_Internal::header(const Update_BrokerageAccount_Rep* msg) {
  return *msg->_impl_.header_;
}
const ::BrokerageId&
Update_BrokerageAccount_Rep::_Internal::brokerage_id(const Update_BrokerageAccount_Rep* msg) {
  return *msg->_impl_.brokerage_id_;
}
void Update_BrokerageAccount_Rep::clear_header() {
  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
}
void Update_BrokerageAccount_Rep::clear_brokerage_id() {
  if (GetArenaForAllocation() == nullptr && _impl_.brokerage_id_ != nullptr) {
    delete _impl_.brokerage_id_;
  }
  _impl_.brokerage_id_ = nullptr;
}
Update_BrokerageAccount_Rep::Update_BrokerageAccount_Rep(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Update_BrokerageAccount_Rep)
}
Update_BrokerageAccount_Rep::Update_BrokerageAccount_Rep(const Update_BrokerageAccount_Rep& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Update_BrokerageAccount_Rep* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.brokerage_id_){nullptr}
    , decltype(_impl_.response_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    _this->_impl_.header_ = new ::Header(*from._impl_.header_);
  }
  if (from._internal_has_brokerage_id()) {
    _this->_impl_.brokerage_id_ = new ::BrokerageId(*from._impl_.brokerage_id_);
  }
  _this->_impl_.response_ = from._impl_.response_;
  // @@protoc_insertion_point(copy_constructor:Update_BrokerageAccount_Rep)
}

inline void Update_BrokerageAccount_Rep::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.header_){nullptr}
    , decltype(_impl_.brokerage_id_){nullptr}
    , decltype(_impl_.response_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Update_BrokerageAccount_Rep::~Update_BrokerageAccount_Rep() {
  // @@protoc_insertion_point(destructor:Update_BrokerageAccount_Rep)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Update_BrokerageAccount_Rep::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.header_;
  if (this != internal_default_instance()) delete _impl_.brokerage_id_;
}

void Update_BrokerageAccount_Rep::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Update_BrokerageAccount_Rep::Clear() {
// @@protoc_insertion_point(message_clear_start:Update_BrokerageAccount_Rep)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.header_ != nullptr) {
    delete _impl_.header_;
  }
  _impl_.header_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.brokerage_id_ != nullptr) {
    delete _impl_.brokerage_id_;
  }
  _impl_.brokerage_id_ = nullptr;
  _impl_.response_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Update_BrokerageAccount_Rep::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .BrokerageId brokerage_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_brokerage_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Update_BrokerageAccount_Rep.ResponseType response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_response(static_cast<::Update_BrokerageAccount_Rep_ResponseType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Update_BrokerageAccount_Rep::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Update_BrokerageAccount_Rep)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::header(this),
        _Internal::header(this).GetCachedSize(), target, stream);
  }

  // .BrokerageId brokerage_id = 3;
  if (this->_internal_has_brokerage_id()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::brokerage_id(this),
        _Internal::brokerage_id(this).GetCachedSize(), target, stream);
  }

  // .Update_BrokerageAccount_Rep.ResponseType response = 4;
  if (this->_internal_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Update_BrokerageAccount_Rep)
  return target;
}

size_t Update_BrokerageAccount_Rep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Update_BrokerageAccount_Rep)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Header header = 1;
  if (this->_internal_has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.header_);
  }

  // .BrokerageId brokerage_id = 3;
  if (this->_internal_has_brokerage_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.brokerage_id_);
  }

  // .Update_BrokerageAccount_Rep.ResponseType response = 4;
  if (this->_internal_response() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_response());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Update_BrokerageAccount_Rep::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Update_BrokerageAccount_Rep::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Update_BrokerageAccount_Rep::GetClassData() const { return &_class_data_; }


void Update_BrokerageAccount_Rep::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Update_BrokerageAccount_Rep*>(&to_msg);
  auto& from = static_cast<const Update_BrokerageAccount_Rep&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Update_BrokerageAccount_Rep)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_header()) {
    _this->_internal_mutable_header()->::Header::MergeFrom(
        from._internal_header());
  }
  if (from._internal_has_brokerage_id()) {
    _this->_internal_mutable_brokerage_id()->::BrokerageId::MergeFrom(
        from._internal_brokerage_id());
  }
  if (from._internal_response() != 0) {
    _this->_internal_set_response(from._internal_response());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Update_BrokerageAccount_Rep::CopyFrom(const Update_BrokerageAccount_Rep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Update_BrokerageAccount_Rep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update_BrokerageAccount_Rep::IsInitialized() const {
  return true;
}

void Update_BrokerageAccount_Rep::InternalSwap(Update_BrokerageAccount_Rep* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Update_BrokerageAccount_Rep, _impl_.response_)
      + sizeof(Update_BrokerageAccount_Rep::_impl_.response_)
      - PROTOBUF_FIELD_OFFSET(Update_BrokerageAccount_Rep, _impl_.header_)>(
          reinterpret_cast<char*>(&_impl_.header_),
          reinterpret_cast<char*>(&other->_impl_.header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Update_BrokerageAccount_Rep::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_getter, &descriptor_table_bankClient_2fbank_5fto_5fbrokerage_2eproto_once,
      file_level_metadata_bankClient_2fbank_5fto_5fbrokerage_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::EndOfDaySummaryRequest_Transaction*
Arena::CreateMaybeMessage< ::EndOfDaySummaryRequest_Transaction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EndOfDaySummaryRequest_Transaction >(arena);
}
template<> PROTOBUF_NOINLINE ::EndOfDaySummaryRequest*
Arena::CreateMaybeMessage< ::EndOfDaySummaryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EndOfDaySummaryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::EndOfDayResponse*
Arena::CreateMaybeMessage< ::EndOfDayResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::EndOfDayResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Deposit*
Arena::CreateMaybeMessage< ::Deposit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Deposit >(arena);
}
template<> PROTOBUF_NOINLINE ::Withdraw*
Arena::CreateMaybeMessage< ::Withdraw >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Withdraw >(arena);
}
template<> PROTOBUF_NOINLINE ::Update_BrokerageAccount_Req*
Arena::CreateMaybeMessage< ::Update_BrokerageAccount_Req >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Update_BrokerageAccount_Req >(arena);
}
template<> PROTOBUF_NOINLINE ::Update_BrokerageAccount_Rep*
Arena::CreateMaybeMessage< ::Update_BrokerageAccount_Rep >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Update_BrokerageAccount_Rep >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
